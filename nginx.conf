
user  nginx nginx;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
worker_rlimit_nofile 51200;

events {
    use epoll;
    worker_connections  51200;
}


rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;

rtmp {
	server {
		listen 1936;
		chunk_size 4096;
		application vod {
			play /mnt/1s1k/mnt247;
		}

        application vod_http {
            play http://172.27.0.102/vod;
        }
		application hls {
			live on;
			hls on;             #把直播服务器改成实时回放模式
			hls_path /tmp/hls;  #
            wait_key on;
            hls_fragment 10s;
            hls_playlist_length 60s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested on;
            recorder all {
                record all;
                record_suffix -%Y-%m-%d-%H_%M_%S.flv;
                record_path /mnt/1s1k/record;
            }
		}
        application hls1 {
            live on;
            hls on;
            hls_path /tmp/hls1;
            wait_key on;
            hls_fragment 10s;
            hls_playlist_length 60s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested on;
        }

        application dash {
            live on;
            dash on;
            dash_path /tmp/dash;
        }
        application live {
            live on;
            gop_cache on;
        }    
	}
}
http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       5480;
        server_name  _;

        #charset koi8-r;

        access_log  logs/host.access.log  main;

        location / {
            root   /home/www;
            index  index.php index.html index.htm;
        }
        location /vod/ {
            alias /mnt/1s1k/mnt247/;
        }
        location /live {
            flv_live on;
            chunked_transfer_encoding off;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true'; #添加额外的HTTP头
        }
        location /hls {
            types {  
                application/vnd.apple.mpegurl m3u8;  
                video/mp2t ts;  
        }
            alias /tmp/hls;   
            expires -1;
            add_header Cache-Control no-cache;  
        }
        location /dash {
            root /tmp;
             add_header 'Cache-Control' 'no-cache';
        }

        location /stat {
            rtmp_stat all;
            #rtmp_stat_stylesheet stat.xsl;
            rtmp_stat_format json;
        }

        location /stat.xsl { #第二处添加的location字段。
            root /home/www/;
        }
        
        location /control {
            rtmp_control all;
        }

	    location ~ \.php$ {
		    root /home/www/;
	    	fastcgi_pass 127.0.0.1:9000;
	    	fastcgi_index index.php;
	    	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #fastcgi_param SCRIPT_FILENAME /home/www/$fastcgi_script_name;
	    	include fastcgi_params;
	    }

	    location /status {
		    stub_status on;
		    access_log off;
	    }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        # location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
